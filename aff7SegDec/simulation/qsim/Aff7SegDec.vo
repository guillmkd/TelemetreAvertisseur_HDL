// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "09/27/2021 15:38:29"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Aff7SegDec (
	\Byte ,
	Lsq);
input 	[3:0] \Byte ;
output 	[6:0] Lsq;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Lsq[0]~output_o ;
wire \Lsq[1]~output_o ;
wire \Lsq[2]~output_o ;
wire \Lsq[3]~output_o ;
wire \Lsq[4]~output_o ;
wire \Lsq[5]~output_o ;
wire \Lsq[6]~output_o ;
wire \Byte[0]~input_o ;
wire \Byte[1]~input_o ;
wire \Byte[2]~input_o ;
wire \Byte[3]~input_o ;
wire \Mux0~0_combout ;
wire \Mux1~0_combout ;
wire \Mux2~0_combout ;
wire \Mux3~0_combout ;
wire \Mux4~0_combout ;
wire \Mux5~0_combout ;
wire \Mux6~0_combout ;
wire \Mux7~0_combout ;
wire [6:0] iLsq;


cyclonev_io_obuf \Lsq[0]~output (
	.i(!iLsq[0]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Lsq[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Lsq[0]~output .bus_hold = "false";
defparam \Lsq[0]~output .open_drain_output = "false";
defparam \Lsq[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Lsq[1]~output (
	.i(!iLsq[1]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Lsq[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Lsq[1]~output .bus_hold = "false";
defparam \Lsq[1]~output .open_drain_output = "false";
defparam \Lsq[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Lsq[2]~output (
	.i(!iLsq[2]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Lsq[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Lsq[2]~output .bus_hold = "false";
defparam \Lsq[2]~output .open_drain_output = "false";
defparam \Lsq[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Lsq[3]~output (
	.i(!iLsq[3]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Lsq[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \Lsq[3]~output .bus_hold = "false";
defparam \Lsq[3]~output .open_drain_output = "false";
defparam \Lsq[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Lsq[4]~output (
	.i(!iLsq[4]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Lsq[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \Lsq[4]~output .bus_hold = "false";
defparam \Lsq[4]~output .open_drain_output = "false";
defparam \Lsq[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Lsq[5]~output (
	.i(!iLsq[5]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Lsq[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \Lsq[5]~output .bus_hold = "false";
defparam \Lsq[5]~output .open_drain_output = "false";
defparam \Lsq[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Lsq[6]~output (
	.i(!iLsq[6]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Lsq[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \Lsq[6]~output .bus_hold = "false";
defparam \Lsq[6]~output .open_drain_output = "false";
defparam \Lsq[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \Byte[0]~input (
	.i(\Byte [0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Byte[0]~input_o ));
// synopsys translate_off
defparam \Byte[0]~input .bus_hold = "false";
defparam \Byte[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Byte[1]~input (
	.i(\Byte [1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Byte[1]~input_o ));
// synopsys translate_off
defparam \Byte[1]~input .bus_hold = "false";
defparam \Byte[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Byte[2]~input (
	.i(\Byte [2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Byte[2]~input_o ));
// synopsys translate_off
defparam \Byte[2]~input .bus_hold = "false";
defparam \Byte[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Byte[3]~input (
	.i(\Byte [3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Byte[3]~input_o ));
// synopsys translate_off
defparam \Byte[3]~input .bus_hold = "false";
defparam \Byte[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux0~0 (
// Equation(s):
// \Mux0~0_combout  = ((!\Byte[1]~input_o  & ((\Byte[2]~input_o ))) # (\Byte[1]~input_o  & ((!\Byte[0]~input_o ) # (!\Byte[2]~input_o )))) # (\Byte[3]~input_o )

	.dataa(!\Byte[0]~input_o ),
	.datab(!\Byte[1]~input_o ),
	.datac(!\Byte[2]~input_o ),
	.datad(!\Byte[3]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux0~0 .extended_lut = "off";
defparam \Mux0~0 .lut_mask = 64'h3EFF3EFF3EFF3EFF;
defparam \Mux0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux1~0 (
// Equation(s):
// \Mux1~0_combout  = (!\Byte[3]~input_o ) # ((!\Byte[1]~input_o  & !\Byte[2]~input_o ))

	.dataa(!\Byte[1]~input_o ),
	.datab(!\Byte[2]~input_o ),
	.datac(!\Byte[3]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux1~0 .extended_lut = "off";
defparam \Mux1~0 .lut_mask = 64'hF8F8F8F8F8F8F8F8;
defparam \Mux1~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \iLsq[0] (
// Equation(s):
// iLsq[0] = ( iLsq[0] & ( \Mux1~0_combout  & ( \Mux0~0_combout  ) ) ) # ( !iLsq[0] & ( \Mux1~0_combout  & ( \Mux0~0_combout  ) ) ) # ( iLsq[0] & ( !\Mux1~0_combout  ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\Mux0~0_combout ),
	.datae(!iLsq[0]),
	.dataf(!\Mux1~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(iLsq[0]),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \iLsq[0] .extended_lut = "off";
defparam \iLsq[0] .lut_mask = 64'h0000FFFF00FF00FF;
defparam \iLsq[0] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux2~0 (
// Equation(s):
// \Mux2~0_combout  = (!\Byte[3]~input_o  & ((!\Byte[0]~input_o  & (\Byte[1]~input_o  & !\Byte[2]~input_o )) # (\Byte[0]~input_o  & ((!\Byte[2]~input_o ) # (\Byte[1]~input_o )))))

	.dataa(!\Byte[0]~input_o ),
	.datab(!\Byte[1]~input_o ),
	.datac(!\Byte[2]~input_o ),
	.datad(!\Byte[3]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux2~0 .extended_lut = "off";
defparam \Mux2~0 .lut_mask = 64'h7100710071007100;
defparam \Mux2~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \iLsq[1] (
// Equation(s):
// iLsq[1] = ( iLsq[1] & ( \Mux1~0_combout  & ( !\Mux2~0_combout  ) ) ) # ( !iLsq[1] & ( \Mux1~0_combout  & ( !\Mux2~0_combout  ) ) ) # ( iLsq[1] & ( !\Mux1~0_combout  ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\Mux2~0_combout ),
	.datae(!iLsq[1]),
	.dataf(!\Mux1~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(iLsq[1]),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \iLsq[1] .extended_lut = "off";
defparam \iLsq[1] .lut_mask = 64'h0000FFFFFF00FF00;
defparam \iLsq[1] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux3~0 (
// Equation(s):
// \Mux3~0_combout  = ((!\Byte[1]~input_o  & \Byte[2]~input_o )) # (\Byte[0]~input_o )

	.dataa(!\Byte[0]~input_o ),
	.datab(!\Byte[1]~input_o ),
	.datac(!\Byte[2]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux3~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux3~0 .extended_lut = "off";
defparam \Mux3~0 .lut_mask = 64'h5D5D5D5D5D5D5D5D;
defparam \Mux3~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \iLsq[2] (
// Equation(s):
// iLsq[2] = ( iLsq[2] & ( \Mux1~0_combout  & ( !\Mux3~0_combout  ) ) ) # ( !iLsq[2] & ( \Mux1~0_combout  & ( !\Mux3~0_combout  ) ) ) # ( iLsq[2] & ( !\Mux1~0_combout  ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\Mux3~0_combout ),
	.datae(!iLsq[2]),
	.dataf(!\Mux1~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(iLsq[2]),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \iLsq[2] .extended_lut = "off";
defparam \iLsq[2] .lut_mask = 64'h0000FFFFFF00FF00;
defparam \iLsq[2] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux4~0 (
// Equation(s):
// \Mux4~0_combout  = (!\Byte[3]~input_o  & ((!\Byte[0]~input_o  & (!\Byte[1]~input_o  & \Byte[2]~input_o )) # (\Byte[0]~input_o  & (!\Byte[1]~input_o  $ (\Byte[2]~input_o )))))

	.dataa(!\Byte[0]~input_o ),
	.datab(!\Byte[1]~input_o ),
	.datac(!\Byte[2]~input_o ),
	.datad(!\Byte[3]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux4~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux4~0 .extended_lut = "off";
defparam \Mux4~0 .lut_mask = 64'h4900490049004900;
defparam \Mux4~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \iLsq[3] (
// Equation(s):
// iLsq[3] = ( iLsq[3] & ( \Mux1~0_combout  & ( !\Mux4~0_combout  ) ) ) # ( !iLsq[3] & ( \Mux1~0_combout  & ( !\Mux4~0_combout  ) ) ) # ( iLsq[3] & ( !\Mux1~0_combout  ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\Mux4~0_combout ),
	.datae(!iLsq[3]),
	.dataf(!\Mux1~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(iLsq[3]),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \iLsq[3] .extended_lut = "off";
defparam \iLsq[3] .lut_mask = 64'h0000FFFFFF00FF00;
defparam \iLsq[3] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux5~0 (
// Equation(s):
// \Mux5~0_combout  = (!\Byte[0]~input_o  & (\Byte[1]~input_o  & !\Byte[2]~input_o ))

	.dataa(!\Byte[0]~input_o ),
	.datab(!\Byte[1]~input_o ),
	.datac(!\Byte[2]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux5~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux5~0 .extended_lut = "off";
defparam \Mux5~0 .lut_mask = 64'h2020202020202020;
defparam \Mux5~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \iLsq[4] (
// Equation(s):
// iLsq[4] = ( iLsq[4] & ( \Mux1~0_combout  & ( !\Mux5~0_combout  ) ) ) # ( !iLsq[4] & ( \Mux1~0_combout  & ( !\Mux5~0_combout  ) ) ) # ( iLsq[4] & ( !\Mux1~0_combout  ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\Mux5~0_combout ),
	.datae(!iLsq[4]),
	.dataf(!\Mux1~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(iLsq[4]),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \iLsq[4] .extended_lut = "off";
defparam \iLsq[4] .lut_mask = 64'h0000FFFFFF00FF00;
defparam \iLsq[4] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux6~0 (
// Equation(s):
// \Mux6~0_combout  = (\Byte[0]~input_o  & (!\Byte[1]~input_o  & \Byte[2]~input_o ))

	.dataa(!\Byte[0]~input_o ),
	.datab(!\Byte[1]~input_o ),
	.datac(!\Byte[2]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux6~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux6~0 .extended_lut = "off";
defparam \Mux6~0 .lut_mask = 64'h0404040404040404;
defparam \Mux6~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \iLsq[5] (
// Equation(s):
// iLsq[5] = ( iLsq[5] & ( \Mux1~0_combout  & ( !\Mux6~0_combout  ) ) ) # ( !iLsq[5] & ( \Mux1~0_combout  & ( !\Mux6~0_combout  ) ) ) # ( iLsq[5] & ( !\Mux1~0_combout  ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\Mux6~0_combout ),
	.datae(!iLsq[5]),
	.dataf(!\Mux1~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(iLsq[5]),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \iLsq[5] .extended_lut = "off";
defparam \iLsq[5] .lut_mask = 64'h0000FFFFFF00FF00;
defparam \iLsq[5] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux7~0 (
// Equation(s):
// \Mux7~0_combout  = (!\Byte[3]~input_o  & ((!\Byte[0]~input_o  & ((\Byte[2]~input_o ))) # (\Byte[0]~input_o  & (!\Byte[1]~input_o  & !\Byte[2]~input_o ))))

	.dataa(!\Byte[0]~input_o ),
	.datab(!\Byte[1]~input_o ),
	.datac(!\Byte[2]~input_o ),
	.datad(!\Byte[3]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux7~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux7~0 .extended_lut = "off";
defparam \Mux7~0 .lut_mask = 64'h4A004A004A004A00;
defparam \Mux7~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \iLsq[6] (
// Equation(s):
// iLsq[6] = ( iLsq[6] & ( \Mux1~0_combout  & ( !\Mux7~0_combout  ) ) ) # ( !iLsq[6] & ( \Mux1~0_combout  & ( !\Mux7~0_combout  ) ) ) # ( iLsq[6] & ( !\Mux1~0_combout  ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\Mux7~0_combout ),
	.datae(!iLsq[6]),
	.dataf(!\Mux1~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(iLsq[6]),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \iLsq[6] .extended_lut = "off";
defparam \iLsq[6] .lut_mask = 64'h0000FFFFFF00FF00;
defparam \iLsq[6] .shared_arith = "off";
// synopsys translate_on

assign Lsq[0] = \Lsq[0]~output_o ;

assign Lsq[1] = \Lsq[1]~output_o ;

assign Lsq[2] = \Lsq[2]~output_o ;

assign Lsq[3] = \Lsq[3]~output_o ;

assign Lsq[4] = \Lsq[4]~output_o ;

assign Lsq[5] = \Lsq[5]~output_o ;

assign Lsq[6] = \Lsq[6]~output_o ;

endmodule
